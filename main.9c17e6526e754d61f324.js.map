{"version":3,"sources":["webpack:///./js/timer.js"],"names":["selector","targetDate","this","document","querySelector","Date","markup","createMarkup","refs","days","hours","mins","secs","startTimer","setInterval","currentData","deltaTime","updateClockface","time","pad","Math","floor","textContent","value","String","padStart","arrayMarkup","forEach","el","blockField","createElement","classList","add","spanTime","setAttribute","spanLabel","append","push"],"mappings":"uJA2DkB,I,WA1DhB,WAAYA,EAAUC,GACpBC,KAAKF,SAAWG,SAASC,cAAcJ,GACvCE,KAAKD,WAAa,IAAII,KAAKJ,GAC3BC,KAAKI,OAASJ,KAAKK,eACnBL,KAAKM,KAAO,CACVC,KAAMN,SAASC,cAAc,2BAC7BM,MAAOP,SAASC,cAAc,2BAC9BO,KAAMR,SAASC,cAAc,8BAC7BQ,KAAMT,SAASC,cAAc,+BAE/BF,KAAKW,WAAaX,KAAKW,a,2BAGzBA,WAAA,WAAa,WACXC,aAAY,WACV,IAAMC,EAAc,IAAIV,KAClBW,EAAY,EAAKf,WAAac,EACpC,EAAKE,gBAAgBD,KACpB,M,EAGLC,gBAAA,SAAgBC,GACd,IAAMT,EAAOP,KAAKiB,IAAIC,KAAKC,MAAMH,EAAO,QAClCR,EAAQR,KAAKiB,IACjBC,KAAKC,MAAOH,EAAO,MAAR,OAEPP,EAAOT,KAAKiB,IAAIC,KAAKC,MAAOH,EAAO,KAAR,MAC3BN,EAAOV,KAAKiB,IAAIC,KAAKC,MAAOH,EAAO,IAAe,MACxDhB,KAAKM,KAAKC,KAAKa,YAAcb,EAC7BP,KAAKM,KAAKE,MAAMY,YAAcZ,EAC9BR,KAAKM,KAAKG,KAAKW,YAAcX,EAC7BT,KAAKM,KAAKI,KAAKU,YAAcV,G,EAG/BO,IAAA,SAAII,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,M,EAGnClB,aAAA,WAAe,MAEPmB,EAAc,GADF,CAAC,OAAQ,QAAS,UAAW,WAGrCC,SAAQ,SAAAC,GAChB,IAAMC,EAAa1B,SAAS2B,cAAc,OAC1CD,EAAWE,UAAUC,IAAI,SACzB,IAAMC,EAAW9B,SAAS2B,cAAc,QACxCG,EAASF,UAAUC,IAAI,SACvBC,EAASC,aAAa,aAAcN,GACpC,IAAMO,EAAYhC,SAAS2B,cAAc,QACzCK,EAAUJ,UAAUC,IAAI,SACxBG,EAAUb,YAAcM,EACxBC,EAAWO,OAAOH,EAAUE,GAC5BT,EAAYW,KAAKR,OAEnB,EAAA3B,KAAKF,UAASoC,OAAd,QAAwBV,I,KAIV,CAAmB,WAAY,kB","file":"main.9c17e6526e754d61f324.js","sourcesContent":["class CountdownTimer {\r\n  constructor(selector, targetDate) {\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = new Date(targetDate);\r\n    this.markup = this.createMarkup();\r\n    this.refs = {\r\n      days: document.querySelector('span[data-value=\"Days\"]'),\r\n      hours: document.querySelector('span[data-value=\"Hours\"'),\r\n      mins: document.querySelector('span[data-value=\"Minutes\"]'),\r\n      secs: document.querySelector('span[data-value=\"Seconds\"]'),\r\n    };\r\n    this.startTimer = this.startTimer();\r\n  }\r\n\r\n  startTimer() {\r\n    setInterval(() => {\r\n      const currentData = new Date();\r\n      const deltaTime = this.targetDate - currentData;\r\n      this.updateClockface(deltaTime);\r\n    }, 1000);\r\n  }\r\n\r\n  updateClockface(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    this.refs.days.textContent = days;\r\n    this.refs.hours.textContent = hours;\r\n    this.refs.mins.textContent = mins;\r\n    this.refs.secs.textContent = secs;\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  createMarkup() {\r\n    const arrayDate = ['Days', 'Hours', 'Minutes', 'Seconds'];\r\n    const arrayMarkup = [];\r\n\r\n    arrayDate.forEach(el => {\r\n      const blockField = document.createElement('div');\r\n      blockField.classList.add('field');\r\n      const spanTime = document.createElement('span');\r\n      spanTime.classList.add('value');\r\n      spanTime.setAttribute('data-value', el);\r\n      const spanLabel = document.createElement('span');\r\n      spanLabel.classList.add('label');\r\n      spanLabel.textContent = el;\r\n      blockField.append(spanTime, spanLabel);\r\n      arrayMarkup.push(blockField);\r\n    });\r\n    this.selector.append(...arrayMarkup);\r\n  }\r\n}\r\n\r\nconst testTimer = new CountdownTimer('#timer-1', 'Jul 21, 2021');\r\n"],"sourceRoot":""}